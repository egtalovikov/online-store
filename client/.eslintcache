[{"/Users/egortalovikov/dev/online-store/client/src/index.js":"1","/Users/egortalovikov/dev/online-store/client/src/App.js":"2","/Users/egortalovikov/dev/online-store/client/src/store/UserStore.js":"3","/Users/egortalovikov/dev/online-store/client/src/store/DeviceStore.js":"4","/Users/egortalovikov/dev/online-store/client/src/components/AppRouter.js":"5","/Users/egortalovikov/dev/online-store/client/src/components/NavBar.js":"6","/Users/egortalovikov/dev/online-store/client/src/routes.js":"7","/Users/egortalovikov/dev/online-store/client/src/utils/consts.js":"8","/Users/egortalovikov/dev/online-store/client/src/pages/Admin.js":"9","/Users/egortalovikov/dev/online-store/client/src/pages/Shop.js":"10","/Users/egortalovikov/dev/online-store/client/src/pages/Basket.js":"11","/Users/egortalovikov/dev/online-store/client/src/pages/DevicePage.js":"12","/Users/egortalovikov/dev/online-store/client/src/pages/Auth.js":"13","/Users/egortalovikov/dev/online-store/client/src/components/TypeBar.js":"14","/Users/egortalovikov/dev/online-store/client/src/components/BrandBar.js":"15","/Users/egortalovikov/dev/online-store/client/src/components/DeviceList.js":"16","/Users/egortalovikov/dev/online-store/client/src/components/DeviceItem.js":"17","/Users/egortalovikov/dev/online-store/client/src/components/modals/CreateBrand.js":"18","/Users/egortalovikov/dev/online-store/client/src/components/modals/CreateDevice.js":"19","/Users/egortalovikov/dev/online-store/client/src/components/modals/CreateType.js":"20","/Users/egortalovikov/dev/online-store/client/src/http/userAPI.js":"21","/Users/egortalovikov/dev/online-store/client/src/http/index.js":"22","/Users/egortalovikov/dev/online-store/client/src/http/deviceAPI.js":"23","/Users/egortalovikov/dev/online-store/client/src/components/Pages.js":"24"},{"size":437,"mtime":1691608939078,"results":"25","hashOfConfig":"26"},{"size":815,"mtime":1691753027146,"results":"27","hashOfConfig":"26"},{"size":400,"mtime":1691686907561,"results":"28","hashOfConfig":"26"},{"size":1296,"mtime":1691767193485,"results":"29","hashOfConfig":"26"},{"size":751,"mtime":1691478758978,"results":"30","hashOfConfig":"26"},{"size":1853,"mtime":1691753200574,"results":"31","hashOfConfig":"26"},{"size":775,"mtime":1691477822562,"results":"32","hashOfConfig":"26"},{"size":227,"mtime":1691477669992,"results":"33","hashOfConfig":"26"},{"size":1553,"mtime":1691510919654,"results":"34","hashOfConfig":"26"},{"size":1546,"mtime":1691766924112,"results":"35","hashOfConfig":"26"},{"size":145,"mtime":1691442404642,"results":"36","hashOfConfig":"26"},{"size":2233,"mtime":1691755980971,"results":"37","hashOfConfig":"26"},{"size":3151,"mtime":1691687309646,"results":"38","hashOfConfig":"26"},{"size":724,"mtime":1691504603315,"results":"39","hashOfConfig":"26"},{"size":791,"mtime":1691505067539,"results":"40","hashOfConfig":"26"},{"size":502,"mtime":1691505412697,"results":"41","hashOfConfig":"26"},{"size":1121,"mtime":1691754375601,"results":"42","hashOfConfig":"26"},{"size":1388,"mtime":1691756396857,"results":"43","hashOfConfig":"26"},{"size":6266,"mtime":1691765760948,"results":"44","hashOfConfig":"26"},{"size":1382,"mtime":1691756157984,"results":"45","hashOfConfig":"26"},{"size":696,"mtime":1691752522909,"results":"46","hashOfConfig":"26"},{"size":406,"mtime":1691609149897,"results":"47","hashOfConfig":"26"},{"size":990,"mtime":1691766800355,"results":"48","hashOfConfig":"26"},{"size":798,"mtime":1691766628602,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"27cuu6",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/egortalovikov/dev/online-store/client/src/index.js",[],["102","103"],"/Users/egortalovikov/dev/online-store/client/src/App.js",["104"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport { Context } from \"./index\";\nimport { Spinner } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\nimport { check } from \"./http/userAPI\";\n\nconst App = observer(() => {\n  const { user } = useContext(Context)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    check().then(data => {\n      user.setUser(true)\n      user.setIsAuth(true)\n    }).finally(() => setLoading(false))\n  }, [])\n\n  if (loading) {\n    return <Spinner animation={\"grow\"} />\n  }\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <AppRouter />\n    </BrowserRouter>\n  );\n});\n\nexport default App;\n","/Users/egortalovikov/dev/online-store/client/src/store/UserStore.js",[],"/Users/egortalovikov/dev/online-store/client/src/store/DeviceStore.js",[],"/Users/egortalovikov/dev/online-store/client/src/components/AppRouter.js",[],"/Users/egortalovikov/dev/online-store/client/src/components/NavBar.js",[],"/Users/egortalovikov/dev/online-store/client/src/routes.js",[],"/Users/egortalovikov/dev/online-store/client/src/utils/consts.js",[],"/Users/egortalovikov/dev/online-store/client/src/pages/Admin.js",[],"/Users/egortalovikov/dev/online-store/client/src/pages/Shop.js",["105","106"],"/Users/egortalovikov/dev/online-store/client/src/pages/Basket.js",[],"/Users/egortalovikov/dev/online-store/client/src/pages/DevicePage.js",["107"],"import React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Container, Image, Row } from 'react-bootstrap';\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom';\nimport { fetchOneDevice } from '../http/deviceAPI';\n\nconst DevicePage = () => {\n    const [device, setDevice] = useState({info: []})\n    const {id} = useParams()\n    useEffect(() => {\n        fetchOneDevice(id).then(data => setDevice(data))\n    }, [])\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={4}>\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img} />\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>{device.name}</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{ background: `url(${bigStar}) no-repeat center center`, width: 240, height: 240, backgroundSize: 'cover', fontSize: 64 }}\n                        >\n                            {device.rating}\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Card\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\n                    >\n                        <h3>От: {device.price} руб.</h3>\n                        <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"d-flex flex-column m-3\">\n                <h1>Характеристики</h1>\n                {device.info.map((info, index) => \n                <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\n                    {info.title}: {info.description}\n                </Row>\n                    )}\n            </Row>\n        </Container>\n    );\n};\n\nexport default DevicePage;","/Users/egortalovikov/dev/online-store/client/src/pages/Auth.js",[],"/Users/egortalovikov/dev/online-store/client/src/components/TypeBar.js",[],"/Users/egortalovikov/dev/online-store/client/src/components/BrandBar.js",[],"/Users/egortalovikov/dev/online-store/client/src/components/DeviceList.js",[],"/Users/egortalovikov/dev/online-store/client/src/components/DeviceItem.js",[],"/Users/egortalovikov/dev/online-store/client/src/components/modals/CreateBrand.js",[],"/Users/egortalovikov/dev/online-store/client/src/components/modals/CreateDevice.js",["108"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Button, Col, Dropdown, Form, Row } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport { Context } from '../../index';\nimport { createDevice, fetchBrands, fetchTypes } from '../../http/deviceAPI';\nimport { observer } from 'mobx-react-lite';\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            size=\"lg\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                                )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите брэнд\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                                )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                            <Row className=\"mt-4\" key={i.number}>\n                                <Col md={4}>\n                                    <Form.Control\n                                        value={i.title}\n                                        onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                        placeholder=\"Введите название свойства\"\n                                    />\n                                </Col>\n                                <Col md={4}>\n                                    <Form.Control\n                                        value={i.description}\n                                        onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                        placeholder=\"Введите описание свойства\"\n                                    />\n                                </Col>\n                                <Col md={4}>\n                                    <Button\n                                        onClick={() => removeInfo(i.number)}\n                                        variant={\"outline-danger\"}\n                                    >\n                                        Удалить\n                                    </Button>\n                                </Col>\n                            </Row>\n                            )\n                    }\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;","/Users/egortalovikov/dev/online-store/client/src/components/modals/CreateType.js",[],"/Users/egortalovikov/dev/online-store/client/src/http/userAPI.js",[],"/Users/egortalovikov/dev/online-store/client/src/http/index.js",[],"/Users/egortalovikov/dev/online-store/client/src/http/deviceAPI.js",["109"],"/Users/egortalovikov/dev/online-store/client/src/components/Pages.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":19,"column":6,"nodeType":"116","endLine":19,"endColumn":8,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":23,"column":8,"nodeType":"116","endLine":23,"endColumn":10,"suggestions":"119"},{"ruleId":"114","severity":1,"message":"118","line":30,"column":8,"nodeType":"116","endLine":30,"endColumn":64,"suggestions":"120"},{"ruleId":"114","severity":1,"message":"121","line":12,"column":8,"nodeType":"116","endLine":12,"endColumn":10,"suggestions":"122"},{"ruleId":"114","severity":1,"message":"118","line":18,"column":8,"nodeType":"116","endLine":18,"endColumn":10,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":18},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["131"],["132"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["133"],["134"],"no-unused-vars","'jwt_decode' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"137","fix":"143"},"Update the dependencies array to be: [user]",{"range":"144","text":"145"},"Update the dependencies array to be: [device]",{"range":"146","text":"147"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"148","text":"149"},"Update the dependencies array to be: [id]",{"range":"150","text":"151"},{"range":"152","text":"147"},[627,629],"[user]",[885,887],"[device]",[1117,1173],"[device.page, device.selectedType, device.selectedBrand, device]",[464,466],"[id]",[743,745]]